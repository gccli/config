#!/bin/bash

remote=server
port=1194
domain=
dns=
compat=0
mobile=0
OPTS=`getopt -a -o r:d:p: -l dns:,compat,mobile -- "$@"`

if [ $? != 0 ] ; then echo "Failed parsing options." >&2 ; exit 1 ; fi

while true; do
  case "$1" in
    -r ) remote=$2; shift 2;;
    -d ) domain=$2; shift 2;;
    -p ) port=$2; shift 2;;
    -dns ) dns="$dns $2"; shift 2;;
    -compat ) compat=1; shift;;
    -mobile ) mobile=1; shift;;
    -- ) shift; break ;;
    * ) break ;;
  esac
done

name=$1
if [ "${name}x" == "x" ]; then
    echo "Usage: $0 [ -r remote ] [ -p port ] [ -d domain ] [ -c algo ] [ -dns dns ] name"
    exit 0
fi

set -ex
if [ ! -f /opt/easyrsa/pki/issued/${name}.crt ]; then
    (cd /opt/easyrsa && ./easyrsa build-client-full ${name} nopass && sleep 1)
fi

cat > /tmp/${name}.ovpn <<EOF
client
nobind
dev tun
verb 4
<connection>
remote $remote $port udp
</connection>
key-direction 1
remote-cert-tls server
cipher AES-256-CBC
$([ $mobile -eq 0 ] && echo pull-filter ignore "redirect-gateway")
comp-lzo
$(for i in $dns; do echo dhcp-option DNS $i; done)
$([ "${domain}x" != "x" ] && echo dhcp-option DOMAIN ${domain})
<ca>
$(sed -ne '/^-----BEGIN/,/^-----END/p' /opt/easyrsa/pki/ca.crt)
</ca>
<cert>
$(sed -ne '/^-----BEGIN/,/^-----END/p' /opt/easyrsa/pki/issued/${name}.crt)
</cert>
<key>
$(sed -ne '/^-----BEGIN/,/^-----END/p' /opt/easyrsa/pki/private/${name}.key)
</key>
<tls-auth>
$(sed -ne '/^-----BEGIN/,/^-----END/p' /opt/secret.key)
</tls-auth>
EOF
