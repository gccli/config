port 1194
proto udp

# "dev tun" will create a routed IP tunnel,
# "dev tap" will create an ethernet tunnel.
# Use "dev tap0" if you are ethernet bridging
# and have precreated a tap0 virtual interface
# and bridged it with your ethernet interface.
dev tun

# SSL/TLS root certificate (ca), certificate
# (cert), and private key (key).  Each client
# and the server must have their own cert and
# key file.  The server and all clients will
# use the same ca file.
#
# See the "easy-rsa" directory for a series
# of scripts for generating RSA certificates
# and private keys.  Remember to use
# a unique Common Name for the server
# and each of the client certificates.
#
# Any X509 key management system can be used.
# OpenVPN can also use a PKCS #12 formatted key file
# (see "pkcs12" directive in man page).
ca /root/git/config/openvpn/easyrsa/pki/ca.crt
cert /root/git/config/openvpn/easyrsa/pki/issued/server.crt
key /root/git/config/openvpn/easyrsa/pki/private/server.key
dh /root/git/config/openvpn/easyrsa/pki/dh.pem
server 10.8.0.0 255.255.255.0
ifconfig-pool-persist ipp.txt

# Push routes to the client to allow it
# to reach other private subnets behind
# the server.
push "route 192.168.99.0 255.255.255.0"
push "route 172.16.254.0 255.255.255.0"

tls-auth /root/git/config/openvpn/my.key 0
cipher AES-256-CBC

status openvpn-status.log
log    openvpn.log
# Set the appropriate level of log
# file verbosity.
#
# 0 is silent, except for fatal errors
# 4 is reasonable for general usage
# 5 and 6 can help to debug connection problems
# 9 is extremely verbose
verb 3

keepalive 15 120
explicit-exit-notify 1
